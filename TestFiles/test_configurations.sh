#!/bin/bash
# Test Configuration Shell Script
# Usage: source TestFiles/test_configurations.sh <test_number>

if [ $# -eq 0 ]; then
    echo "üóÇÔ∏è Usage: source TestFiles/test_configurations.sh <test_number>"
    echo "üìã Available tests:"
    echo "  1: üÜï Full New Project Creation"
    echo "  2: üìÇ Use Existing Project - Task Focus"
    echo "  3: üî• Creation Heavy Load Test"
    echo "  4: üëÅÔ∏è View Heavy Load Test"
    echo "  5: üìù Task Management Focus"
    echo "  6: üêõ Debug/Development Mode"
    echo "  7: üèóÔ∏è Project Creation Only"
    echo "  8: ‚ö° High Performance Test"
    echo "  9: üîÑ Mixed Operations Test"
    echo "  10: üß™ Custom Template"
    return 1
fi

TEST_NUM=$1

case $TEST_NUM in
    1)
        echo "üîß Loading Test 1: üÜï Full New Project Creation"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="FullLifecycleTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="FullTestPhase"
        export TEST_MILESTONE_NAME="FullTestMilestone"
        export TEST_TASK_NAME="FullTestTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks"
        export TEST_SCENARIO="balanced"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 1 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    2)
        echo "üîß Loading Test 2: üìÇ Use Existing Project - Task Focus"
        export CREATE_NEW_PROJECT="false"
        export PROJECT_NAME_TXT="ExistingProject"
        export PROJECT_ID="e34b9b43-fa9f-4a09-a3bf-1178f471a5dc"
        export CREATE_NEW_PHASE="false"
        export PHASE_ID="e34bcc9e-18b2-44f7-9384-d1d8af35de78"
        export TEST_PHASE_NAME="ExistingPhase"
        export TEST_MILESTONE_NAME="TaskFocusedMilestone"
        export TEST_TASK_NAME="TaskFocusedTask"
        export ENABLED_MODULES="milestones,tasks"
        export TEST_SCENARIO="task_focused"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 2 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    3)
        echo "üîß Loading Test 3: üî• Creation Heavy Load Test"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="CreationLoadTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="CreationPhase"
        export TEST_MILESTONE_NAME="CreationMilestone"
        export TEST_TASK_NAME="CreationTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks"
        export TEST_SCENARIO="creation_heavy"
        export COORDINATION_MODE="parallel"
        echo "‚úÖ Test 3 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    4)
        echo "üîß Loading Test 4: üëÅÔ∏è View Heavy Load Test"
        export CREATE_NEW_PROJECT="false"
        export PROJECT_NAME_TXT="ViewLoadTest"
        export PROJECT_ID="e34b9b43-fa9f-4a09-a3bf-1178f471a5dc"
        export CREATE_NEW_PHASE="false"
        export PHASE_ID="e34bcc9e-18b2-44f7-9384-d1d8af35de78"
        export TEST_PHASE_NAME="ViewPhase"
        export TEST_MILESTONE_NAME="ViewMilestone"
        export TEST_TASK_NAME="ViewTask"
        export ENABLED_MODULES="projects,phases,tasks"
        export TEST_SCENARIO="view_heavy"
        export COORDINATION_MODE="parallel"
        echo "‚úÖ Test 4 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    5)
        echo "üîß Loading Test 5: üìù Task Management Focus"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="TaskManagementTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="TaskPhase"
        export TEST_MILESTONE_NAME="TaskMilestone"
        export TEST_TASK_NAME="TaskManagementTask"
        export ENABLED_MODULES="phases,milestones,tasks,subtasks"
        export TEST_SCENARIO="task_focused"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 5 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    6)
        echo "üîß Loading Test 6: üêõ Debug/Development Mode"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="DebugTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="DebugPhase"
        export TEST_MILESTONE_NAME="DebugMilestone"
        export TEST_TASK_NAME="DebugTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks"
        export TEST_SCENARIO="balanced"
        export COORDINATION_MODE="sequential"
        echo "‚úÖ Test 6 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    7)
        echo "üîß Loading Test 7: üèóÔ∏è Project Creation Only"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="ProjectOnlyTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="false"
        export PHASE_ID=""
        export TEST_PHASE_NAME="ProjectPhase"
        export TEST_MILESTONE_NAME="ProjectMilestone"
        export TEST_TASK_NAME="ProjectTask"
        export ENABLED_MODULES="projects"
        export TEST_SCENARIO="creation_heavy"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 7 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    8)
        echo "üîß Loading Test 8: ‚ö° High Performance Test"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="PerformanceTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="PerfPhase"
        export TEST_MILESTONE_NAME="PerfMilestone"
        export TEST_TASK_NAME="PerfTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks"
        export TEST_SCENARIO="creation_heavy"
        export COORDINATION_MODE="parallel"
        echo "‚úÖ Test 8 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    9)
        echo "üîß Loading Test 9: üîÑ Mixed Operations Test"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="MixedOpsTest"
        export PROJECT_ID=""
        export CREATE_NEW_PHASE="true"
        export PHASE_ID=""
        export TEST_PHASE_NAME="MixedPhase"
        export TEST_MILESTONE_NAME="MixedMilestone"
        export TEST_TASK_NAME="MixedTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks,subtasks"
        export TEST_SCENARIO="balanced"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 9 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    10)
        echo "üîß Loading Test 10: üß™ Custom Template"
        export CREATE_NEW_PROJECT="true"
        export PROJECT_NAME_TXT="CustomTest"
        export PROJECT_ID="your-project-id-if-using-existing"
        export CREATE_NEW_PHASE="true"
        export PHASE_ID="your-phase-id-if-using-existing"
        export TEST_PHASE_NAME="CustomPhase"
        export TEST_MILESTONE_NAME="CustomMilestone"
        export TEST_TASK_NAME="CustomTask"
        export ENABLED_MODULES="projects,phases,milestones,tasks"
        export TEST_SCENARIO="balanced"
        export COORDINATION_MODE="smart"
        echo "‚úÖ Test 10 configuration loaded!"
        echo "üöÄ Run: locust -f TestFiles/master_test_controller.py --users 10 --spawn-rate 2"
        ;;
    *)
        echo "‚ùå Invalid test number: $TEST_NUM"
        echo "üìã Available tests: 1-10"
        return 1
        ;;
esac
